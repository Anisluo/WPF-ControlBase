<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Basic/Paths.xaml"/>
        <ResourceDictionary Source="Button.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->

    <Style x:Key="PaginationButtonStyle"  TargetType="RadioButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="GroupName" Value="1"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Command" Value="{x:Static local:CommandService.Selected}"/>
        <Setter Property="Tag" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border MinWidth="30" x:Name="border" CornerRadius="2" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock x:Name="txt" Margin="6" Text="{TemplateBinding Tag}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX=".95" ScaleY=".95"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>-->
                <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="local:Pagination">
        <Setter Property="Focusable" Value="False"/>
        <!--<Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />-->
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Pagination">
                    <Grid TextBlock.FontSize="{DynamicResource S.FontSize.Default}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <local:FButton Content="上一页" x:Name="PART_ButtonLeft"  Margin="5,0" VerticalAlignment="Center"
                                       Command="{x:Static local:CommandService.Prev}"
                                       Style="{DynamicResource S.FButton.Style.Transparent}"/>

                        <StackPanel HorizontalAlignment="Center" Grid.Column="1" Orientation="Horizontal">
                            <base:Interaction.Triggers>
                                <base:EventTrigger EventName="RadioButton.Checked">
                                    <base:InvokeCommandAction Command="local:CommandService.Selected" PassEventArgsToCommand="True" />
                                </base:EventTrigger>
                            </base:Interaction.Triggers>

                            <RadioButton Name="PART_ButtonFirst" Tag="1" IsChecked="True" Style="{StaticResource PaginationButtonStyle}"/>

                            <TextBlock Name="PART_TextBlockLeft" Margin="10,0"  Text="..." VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <StackPanel Name="PART_PanelMain" Orientation="Horizontal"/>

                            <TextBlock Name="PART_TextBlockRight" Margin="10,0" Text="..." VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <RadioButton Name="PART_ButtonLast"  Tag="10" Style="{StaticResource PaginationButtonStyle}"/>

                        </StackPanel>

                        <local:FButton Content="下一页" x:Name="PART_ButtonRight" Grid.Column="2"  Margin="5,0" VerticalAlignment="Center"
                                       Command="{x:Static local:CommandService.Next}" 
                                       Style="{DynamicResource S.FButton.Style.Transparent}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
