<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <!--由下到上渐显模板-->
    <ControlTemplate x:Key="ListBox_DownToUp" TargetType="{x:Type ListBox}">
        <Grid>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <StackPanel IsItemsHost="True"/>

            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{StaticResource S.Storyboard.Load.OpacityDownToUp}"/>
                </EventTrigger>
            </Grid.Triggers>
        </Grid>
    </ControlTemplate>

    <!--带等待框的-->
    <ControlTemplate x:Key="ListBox_Buzy" TargetType="{x:Type ListBox}">
        <Grid>
            <ScrollViewer>
                <StackPanel IsItemsHost="True"/>
            </ScrollViewer>
            <local:WaitingBox IsBusy="{TemplateBinding base:ControlAttachProperty.IsBuzy}"/>
        </Grid>
    </ControlTemplate>


    <!--以WrapPanel为容器的选择列表-->
    <Style x:Key="S.ListBox.WrapPanelCheckBoxSelecter" TargetType="ListBox">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Defaut}"/>
        <Setter Property="Background" Value="{DynamicResource S.Brush.White.Notice}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Defaut}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Defaut}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ControlTemplate.Resources>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Margin" Value="5,2"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <Grid>
                                                        <TextBlock x:Name="txt"  Text="{TemplateBinding Content}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="true">
                                                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="txt"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ControlTemplate.Resources>
                                <Border  x:Name="IconBorder" Background="Transparent" BorderThickness="0,0,0,0.2"  BorderBrush="LightGray">
                                    <Border>
                                        <CheckBox Content="{Binding Name}" 
                                                      IsChecked="{Binding IsSelected}" 
                                                      IsHitTestVisible="False" 
                                                      VerticalAlignment="Center" 
                                                      Foreground="{TemplateBinding Foreground}" x:Name="cb"/>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="IconBorder" Property="BitmapEffect">
                                            <Setter.Value>
                                                <OuterGlowBitmapEffect GlowColor="Transparent" GlowSize="5" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="IsChecked" TargetName="cb" Value="true"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="IconBorder" Property="BitmapEffect">
                                            <Setter.Value>
                                                <OuterGlowBitmapEffect GlowColor="Transparent" GlowSize="5" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" TargetName="cb" 
                                                    Value="{DynamicResource S.Brush.Accent.Opacity.8}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>