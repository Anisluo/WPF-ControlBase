<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
    xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
   >
    <Style TargetType="{x:Type local:FComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"></Setter>
        <Setter Property="Background"  Value="{DynamicResource S.Brush.TextBackground.Default}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}"></Setter>
        <Setter Property="BorderThickness"  Value="1"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="5,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="0,0,7,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="bdrMain" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" x:Name="ContentSite"
                                          VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" Opacity="0.8" />

                        <!--<ToggleButton x:Name="ToggleButton" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>

                                                    <Path x:Name="arrow1"  Opacity="1" VerticalAlignment="Center" Grid.Column="1"
                                                          HorizontalAlignment="Center" Data="M5,4 H14 L9.5,10 Z" Width="15"  Height="15"
                                                          Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" />

                                                    <Path x:Name="arrow2" Opacity="0" VerticalAlignment="Center" Grid.Column="1"
                                                          HorizontalAlignment="Center" Data="M5,10 H14 L9.5,4.5 Z" Width="15" Height="15"
                                                          Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked"
                                                             Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2" Storyboard.TargetProperty="Opacity"  To="0" Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>-->

                        <!--下拉按钮-->
                        <ToggleButton x:Name="ToggleButton" IsTabStop="False" Style="{DynamicResource ComboToggleButton}" base:ControlAttachProperty.FIconSize="15"
                              base:ControlAttachProperty.FIconMargin="{TemplateBinding base:ControlAttachProperty.FIconMargin}"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                         Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},
                                          Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                          Foreground="{TemplateBinding Foreground}" 
                                          Background="{TemplateBinding base:ControlAttachProperty.FocusBackground}"/>

                        <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" 
                                           Text="{TemplateBinding base:ControlAttachProperty.Watermark}" 
                                           Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" 
                                           Opacity="{DynamicResource S.Opacity.Watermark}" HorizontalAlignment="Left" 
                                           TextAlignment="Center" 
                                           VerticalAlignment="Center" Margin="5,2,5,2" />

                        <local:FTextBox BorderThickness="0" Margin="0,0,25,0" Padding="{TemplateBinding Padding}" x:Name="PART_EditableTextBox"
                                         VerticalAlignment="Center" Focusable="True" Visibility="Hidden" Background="Transparent"
                                         BorderBrush="Transparent"  Foreground="{TemplateBinding Foreground}" IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown">
                                <Border x:Name="DropDownBorder" Margin="0,0,0,10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1" CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Opacity="1" Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=ComboBox}}"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <local:FTextBox x:Name="tbSearch" Padding="5,0,0,0" Tag="Search"
                                                     Visibility="{Binding SearchBoxVisibility,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                     BorderBrush="Transparent" BorderThickness="0"
                                                     Style="{DynamicResource S.FTextBox.Clear}" base:ControlAttachProperty.Watermark="请输入搜索条件"
                                                     Foreground="{TemplateBinding Foreground}" FontFamily="{DynamicResource IconFont}" Margin="1,5,1,0" />

                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Style="{DynamicResource MiniScrollViewer}" Margin="1,5,1,15" MaxHeight="250">
                                        <ItemsPresenter />
                                    </ScrollViewer>

                                    <local:FButton x:Name="btnClear" Grid.Row="1" Visibility="Collapsed"
                                                    Content="×" Tag="Clear" Margin="0,0,3,0"
                                                    Foreground="{TemplateBinding Foreground}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"  Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Opacity" Value="0.9"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" Value="1"></Setter>
                        </Trigger>
                        <!--1.显示水印-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"></Setter>
        <Setter Property="VerticalContentAlignment"  Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="5,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FComboBoxItem}">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="bdrMain" Background="Transparent" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          x:Name="txtContent" Opacity="0.8" ContentSource="Content" />

                        <local:FButton x:Name="btnDelete" Opacity="0.7" Style="{DynamicResource S.FButton.Style.Transparent}"
                                        Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=ComboBoxItem}}"
                                        CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}" Width="35"
                                        Cursor="Arrow" Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}" VerticalAlignment="Top"
                                        HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="20" Content="×"></local:FButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanDelete" Value="False">
                            <Setter TargetName="btnDelete" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="bdrMain" Property="Background" Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent"  Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bdrMain" Property="Background" Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent" Property="Opacity" Value="0.7" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
