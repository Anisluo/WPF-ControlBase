<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                     xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--下拉条目样式-->
    <Style TargetType="ComboBoxItem" x:Key="S.ComboBoxItem.Default">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=Height}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0" Width="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=Weight}">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background"  Value="{DynamicResource S.Brush.Accent}" />
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认样式-->
    <ControlTemplate x:Key="S.Combobox.Tempalte.Default" TargetType="{x:Type ComboBox}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <!--Label区域-->
                <ContentControl x:Name="Label" Foreground="{TemplateBinding Foreground}"
                                            Template="{TemplateBinding base:ControlAttachProperty.LabelTemplate}" 
                                            IsTabStop="False" IsHitTestVisible="False" 
                                            Background="{TemplateBinding BorderBrush}"
                                            Content="{TemplateBinding base:ControlAttachProperty.Label}" 
                                            Margin="1,1,0,1"/>

                <!--附加内容区域-->
                <Border  Panel.ZIndex="2" Grid.Column="2" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent"  Foreground="{DynamicResource S.Brush.TextForeground.Assist}"
                                                VerticalContentAlignment="Center" 
                                                Template="{TemplateBinding base:ControlAttachProperty.AttachContent}" />
                </Border>

                <!--下拉按钮-->
                <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" Style="{DynamicResource ComboToggleButton}" base:ControlAttachProperty.FIconSize="15"
                              base:ControlAttachProperty.FIconMargin="{TemplateBinding base:ControlAttachProperty.FIconMargin}"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                         Grid.Column="1" Grid.ColumnSpan="3" IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},
                                          Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                          Foreground="{TemplateBinding Foreground}" 
                                          Background="{TemplateBinding base:ControlAttachProperty.FocusBackground}"/>
                <!--水印-->
                <Border Grid.Column="1">
                    <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" 
                                           Text="{TemplateBinding base:ControlAttachProperty.Watermark}" 
                                           Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" 
                                           Opacity="{DynamicResource S.Opacity.Watermark}" HorizontalAlignment="Left" 
                                           TextAlignment="Center" 
                                           VerticalAlignment="Center" Margin="5,2,5,2" />
                </Border>

                <!--主内容区域-->
                <Border Grid.Column="1">
                    <Grid  x:Name="ContentSite" Margin="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="PART_SelectedItem"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="2,0,2,0" 
                                                  IsHitTestVisible="False" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--文本编辑-->
                        <TextBox  x:Name="PART_EditableTextBox" 
                                         Style="{DynamicResource EditableTextBoxStyle}" 
                                         Visibility="Collapsed"
                                         HorizontalAlignment="Stretch" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         IsHitTestVisible="True" Margin="{TemplateBinding Padding}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" 
                                         FontFamily="{TemplateBinding FontFamily}" 
                                         Foreground="{TemplateBinding Foreground}"
                                         Background="{TemplateBinding Background}"
                                         Text="{TemplateBinding Text}" 
                                         FontSize="{TemplateBinding FontSize}" />
                    </Grid>
                </Border>
            </Grid>
            <!--弹出下拉控件-->
            <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False" VerticalOffset="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                <Grid Width="{Binding  ActualWidth,RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        
                        <Path Data="{TemplateBinding base:ControlAttachProperty.Path}" ClipToBounds="True" Stroke="{DynamicResource S.Brush.Accent}" Fill="{DynamicResource S.Brush.TextBackground.Default}" StrokeThickness="1" Stretch="Fill"/>

                        <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="0,10,0,5">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                    </Grid>

                </Grid>
            </Popup>
        </Grid>
        <!--触发器-->
        <ControlTemplate.Triggers>

            <!--编辑模式-->
            <Trigger Property="IsEditable" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"></Setter>
            </Trigger>

            <!--1.显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="BorderBrush"  Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--抬头在外部样式-->
    <ControlTemplate x:Key="S.Combobox.Tempalte.Single" TargetType="{x:Type ComboBox}">
        <Grid x:Name="PART_Root">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Grid.ColumnSpan="3"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" />

                <!--Label区域-->
                <ContentControl x:Name="Label" 
                                            Template="{TemplateBinding base:ControlAttachProperty.LabelTemplate}" 
                                            IsTabStop="False" IsHitTestVisible="False" 
                                            Background="{TemplateBinding BorderBrush}"
                                            Content="{TemplateBinding base:ControlAttachProperty.Label}" 
                                            Margin="1,1,0,1"/>

                <!--附加内容区域-->
                <Border  Panel.ZIndex="2" Grid.Column="2" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent" Foreground="{DynamicResource S.Brush.TextForeground.Assist}"
                                                VerticalContentAlignment="Center" 
                                                Template="{TemplateBinding base:ControlAttachProperty.AttachContent}" />
                </Border>

                <!--下拉按钮-->
                <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False" Style="{DynamicResource ComboToggleButton}" base:ControlAttachProperty.FIconSize="15"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         base:ControlAttachProperty.FIconMargin="{TemplateBinding base:ControlAttachProperty.FIconMargin}"
                                         Grid.Column="1"  Grid.ColumnSpan="3" IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent},
                                         Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                        Foreground="{TemplateBinding Foreground}" 
                                         Background="{TemplateBinding base:ControlAttachProperty.FocusBackground}"/>
                <!--水印-->
                <Border Grid.Column="1">
                    <TextBlock x:Name="Message"  Padding="0" Visibility="Collapsed" 
                                       Text="{TemplateBinding base:ControlAttachProperty.Watermark}" 
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" 
                                       Opacity="{DynamicResource S.Opacity.Watermark}" HorizontalAlignment="Left" 
                                       TextAlignment="Center" 
                                       VerticalAlignment="Center" Margin="5,2,5,2" />
                </Border>

                <!--主内容区域-->
                <Grid Grid.Column="1" x:Name="ContentSite"  Margin="{TemplateBinding Padding}">
                    <ContentPresenter x:Name="PART_SelectedItem" 
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Stretch" Margin="2,0,2,0" 
                                                  IsHitTestVisible="False" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <!--文本编辑-->
                    <TextBox  x:Name="PART_EditableTextBox" 
                                          Style="{DynamicResource EditableTextBoxStyle}" 
                                          Visibility="Collapsed" 
                                          HorizontalAlignment="Stretch" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          IsHitTestVisible="True"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsReadOnly="{TemplateBinding IsReadOnly}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="{TemplateBinding Background}"
                                          Text="{TemplateBinding Text}" 
                                          FontSize="{TemplateBinding FontSize}" />
                </Grid>
            </Grid>
            <!--弹出下拉控件-->
            <Popup x:Name="PART_Popup"
                               AllowsTransparency="True" 
                               Focusable="False" VerticalOffset="2"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">

                <Grid Width="{Binding  ActualWidth,RelativeSource={RelativeSource TemplatedParent}}" Margin="0,10,0,0"
                                  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">

                    <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0">
                        <Grid Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path Data="{TemplateBinding base:ControlAttachProperty.Path}" Stroke="{DynamicResource S.Brush.Accent}" Fill="{DynamicResource S.Brush.TextBackground.Default}" StrokeThickness="1" Stretch="Fill"/>

                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"  Margin="0,10,0,5" />
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <!--触发器-->
        <ControlTemplate.Triggers>

            <!--编辑模式-->
            <Trigger Property="IsEditable" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{DynamicResource S.Opacity.Disable}"></Setter>
            </Trigger>

            <!--1.显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_DropDownToggle" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>

            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="BorderBrush"  Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>

            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Default">
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="{DynamicResource S.Thickness.Margin.10.0}" />
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="0,0,7,0" />
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        <Setter Property="base:ControlAttachProperty.FocusBackground" Value="{DynamicResource S.Brush.Dark.4}" />
        <Setter Property="base:ControlAttachProperty.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="base:ControlAttachProperty.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}" />
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource S.ComboBoxItem.Default}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="base:ControlAttachProperty.Path" Value="{StaticResource S.Geometry.Rectangle.Rounded.TopRight}"/>
        <Setter Property="Template" Value="{StaticResource S.Combobox.Tempalte.Default}"/>
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>


    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Single" BasedOn="{StaticResource S.ComboBox.Default}">
        <Setter Property="Template" Value="{StaticResource S.Combobox.Tempalte.Single}"/>
    </Style>

    <!--ComboBox包含清除Text按钮的样式 S.ComboBox.Clear -->
    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Clear" BasedOn="{StaticResource S.ComboBox.Default}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" FIconMargin="0" AllowsAnimation="True" 
                                   base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}"
                                   IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}},
                                   Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}"
                                   Margin="-10,0" FIconSize="14" Foreground="{TemplateBinding Foreground}"  Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含附加属性Label的样式 S.ComboBox.Label -->
    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Label" BasedOn="{StaticResource S.ComboBox.Default}">
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70"  Background="{DynamicResource S.Brush.Accent}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Left}">
                        <TextBlock Margin="3" VerticalAlignment="Center" HorizontalAlignment="Right"  Foreground="{DynamicResource S.Brush.TextForeground.White}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含附加属性Label，以及ClearText按钮的样式 S.ComboBox.LabelClear -->
    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.LabelClear" BasedOn="{StaticResource S.ComboBox.Label}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}" IsTabStop="False" FIconMargin="0"
                               base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                               CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}"
                                   IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}},
                        Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}"  HorizontalAlignment="Center"
                               Margin="0,0,-2,0" FIconSize="14" Foreground="{TemplateBinding Foreground}"  Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ComboBox包含附加属性Label的样式 S.ComboBox.Label -->
    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Single.Label" BasedOn="{StaticResource S.ComboBox.Single}">
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70" Margin="3">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox包含附加属性Label，以及ClearText按钮的样式 S.ComboBox.LabelClear -->
    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Single.LabelClear" BasedOn="{StaticResource S.ComboBox.Single.Label}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}" IsTabStop="False" FIconMargin="0"
                               base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                               Command="base:ControlAttachProperty.ClearTextCommand" 
                               CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}}}"
                               IsEnabled="{Binding Path=IsReadOnly,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ComboBox}},
                               Converter={x:Static base:XConverter.TrueToFalseConverter},Mode=OneWay}" HorizontalAlignment="Center"
                               Margin="0,0,-2,0" FIconSize="14" Foreground="{TemplateBinding Foreground}" Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Circle" BasedOn="{StaticResource S.ComboBox.Default}">
        <Setter Property="Padding" Value="15,0,0,0"/>
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="0,0,22,0"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="S.ComboBox.Circle.Label" BasedOn="{StaticResource S.ComboBox.Label}">
        <Setter Property="Padding" Value="0,0,20,0"/>
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="{DynamicResource S.Window.Item.CornerRadius}"/>
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="0,0,13,0"/>
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="90" Background="Transparent">
                        <TextBlock  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource S.ComboBox.Default}"></Style>
</ResourceDictionary>