<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib"
                   xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
                   xmlns:system="clr-namespace:System;assembly=mscorlib">


    <ControlTemplate x:Key="S.BindPassWordBox.Template.Default" TargetType="{x:Type local:BindPassWordBox}">
        <Grid x:Name="PART_Root">
            <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
            <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--Label区域-->
                <ContentControl x:Name="Label" Margin="1" Foreground="{TemplateBinding Foreground}"
                                            Background="{TemplateBinding Background}"
                                            Template="{TemplateBinding base:ControlAttachProperty.LabelTemplate}"
                                            Content="{TemplateBinding base:ControlAttachProperty.Label}"/>


                <TextBlock Style="{DynamicResource FIcon}" x:Name="ficon"
                                       Margin="{TemplateBinding base:ControlAttachProperty.FIconMargin}" 
                                       FontSize="{TemplateBinding base:ControlAttachProperty.FIconSize}" 
                                       Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{TemplateBinding base:ControlAttachProperty.FIcon}"/>

                <!--内容区域-->
                <TextBox  Grid.Column="2"  
                                          x:Name="PART_TextBox" 
                                          SelectionBrush="{TemplateBinding SelectionBrush}"  
                                          HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                                          Grid.ColumnSpan="3" Text="{TemplateBinding PassWord}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Height="{TemplateBinding Height}"
                                          BorderThickness="0" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Center" Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="Transparent"/>

                <!--内容区域-->
                <PasswordBox  Grid.Column="2"  
                                          x:Name="PART_PassWord"
                                          SelectionBrush="{TemplateBinding SelectionBrush}"  
                                          HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                                          Grid.ColumnSpan="3"
                                          BorderThickness="0" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Center" Background="{TemplateBinding Background}"
                                          PasswordChar="{TemplateBinding PasswordChar}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Height="{TemplateBinding Height}"
                                          Visibility="{Binding ElementName=toggle,Path=IsChecked,Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding Background}"/>

                <!--水印-->
                <TextBlock x:Name="Message"  Padding="{TemplateBinding Padding}" Visibility="Collapsed"
                                       Text="{TemplateBinding base:ControlAttachProperty.Watermark}" Grid.Column="2"
                                       IsHitTestVisible="False"
                                       Opacity="{DynamicResource S.Opacity.Watermark}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,5,2" />


                <ToggleButton x:Name="toggle" FontSize="15" IsChecked="True"
                                          Grid.Column="3"  Margin="4"
                                          Style="{DynamicResource S.ToggleButton.DoubleFIconChecked}"/>

                <!--</ScrollViewer>-->
                <!--附加内容区域-->
                <Border  Grid.Column="4"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent"  
                                                VerticalContentAlignment="Center" 
                                                Template="{TemplateBinding base:ControlAttachProperty.AttachContent}" />
                </Border>
            </Grid>

        </Grid>
        <ControlTemplate.Triggers>
            <!--显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=PassWord}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <!--显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=PassWord}" Value="{x:Null}">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground"  Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}" TargetName="ficon"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="toggle" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>

            </Trigger>

            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground"  Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="ficon"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="toggle" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message"  Value="{DynamicResource S.Brush.Accent}"/>
            </Trigger>
            <!--不可用-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource S.Opacity.Disable}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="S.BindPassWordBox.Template.Single" TargetType="{x:Type local:BindPassWordBox}">
        <Grid x:Name="PART_Root">
            <Grid x:Name="PART_InnerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition  Width="Auto" />
                    <ColumnDefinition  Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                <!--Label区域-->
                <ContentControl x:Name="Label" Margin="1" Foreground="{DynamicResource S.Brush.TextForeground.Default}"
                                            Background="{TemplateBinding Foreground}"
                                            Template="{TemplateBinding base:ControlAttachProperty.LabelTemplate}"
                                            Content="{TemplateBinding base:ControlAttachProperty.Label}"/>


                <TextBlock Style="{DynamicResource FIcon}" x:Name="ficon"
                                        Margin="{TemplateBinding base:ControlAttachProperty.FIconMargin}" 
                                       FontSize="{TemplateBinding base:ControlAttachProperty.FIconSize}" 
                                       Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{TemplateBinding base:ControlAttachProperty.FIcon}"/>

                <!--内容区域-->
                <TextBox  Grid.Column="2"  
                                          x:Name="PART_TextBox" 
                                          SelectionBrush="{TemplateBinding SelectionBrush}"  
                                          HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                                          Grid.ColumnSpan="3" Text="{TemplateBinding PassWord}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Height="{TemplateBinding Height}"
                                          BorderThickness="0" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Center" Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="Transparent"/>

                <!--内容区域-->
                <PasswordBox  Grid.Column="2"  
                                          x:Name="PART_PassWord"
                                          SelectionBrush="{TemplateBinding SelectionBrush}"  
                                          HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                                          Grid.ColumnSpan="3"
                                          BorderThickness="0" IsTabStop="False" Margin="2"
                                          VerticalAlignment="Center" Background="{TemplateBinding Background}"
                                          PasswordChar="{TemplateBinding PasswordChar}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Height="{TemplateBinding Height}"
                                          Visibility="{Binding ElementName=toggle,Path=IsChecked,Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding Background}"/>

                <!--水印-->
                <TextBlock x:Name="Message"  Padding="{TemplateBinding Padding}" Visibility="Collapsed"
                                       Text="{TemplateBinding base:ControlAttachProperty.Watermark}" Grid.Column="2"
                                       Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" 
                                       Opacity="{DynamicResource S.Opacity.Watermark}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,5,2" />


                <ToggleButton x:Name="toggle" FontSize="15" IsChecked="True"
                                          Grid.Column="3"  Margin="5" 
                                          Style="{DynamicResource S.ToggleButton.DoubleFIconChecked}"/>

                <!--</ScrollViewer>-->
                <!--附加内容区域-->
                <Border Grid.Column="4"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <ContentControl VerticalAlignment="Center" x:Name="PART_AttachContent" 
                                                VerticalContentAlignment="Center"
                                                Template="{TemplateBinding base:ControlAttachProperty.AttachContent}" />
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PassWord}" Value="">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <!--显示水印-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=PassWord}" Value="{x:Null}">
                <Setter TargetName="Message" Property="Visibility" Value="Visible" />
            </DataTrigger>


            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground"   Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}" TargetName="ficon"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="toggle" Value="{Binding Path=(base:ControlAttachProperty.MouseOverBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>

            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter  Property="BorderBrush" Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground"  Value="{Binding Path=(base:ControlAttachProperty.FocusBorderBrush),RelativeSource={RelativeSource Self}}" TargetName="ficon"/>
                <Setter  Property="Foreground" TargetName="Label" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="PART_AttachContent" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="toggle" Value="{DynamicResource S.Brush.Accent}"/>
                <Setter  Property="Foreground" TargetName="Message" Value="{DynamicResource S.Brush.Accent}"/>  
            </Trigger>
            <!--不可用-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource S.Opacity.Disable}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--TextBox默认样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Default">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}" />
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextBorderBrush.Default}" />
        <Setter Property="base:ControlAttachProperty.FocusBorderBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="base:ControlAttachProperty.MouseOverBorderBrush" Value="{DynamicResource S.Brush.Accent.MouseOver}" />
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!-- change SnapsToDevicePixels to True to view a better border and validation error -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--英 ['kærət]  美 ['kærət]  插入符号-->
        <Setter Property="CaretBrush" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="Template" Value="{StaticResource S.BindPassWordBox.Template.Default}"/>
    </Style>

    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Single" BasedOn="{StaticResource S.BindPasswordBox.Default}" >
        <Setter Property="Template" Value="{StaticResource S.BindPassWordBox.Template.Single}"/>
    </Style>

    <!--TextBox包含清除Text按钮的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Clear" BasedOn="{StaticResource S.BindPasswordBox.Default}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" 
                                   FIconMargin="0"
                                   base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                   Margin="1,3,1,4" 
                                   FIconSize="14" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Label" BasedOn="{StaticResource S.BindPasswordBox.Default}">
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70" Background="{DynamicResource S.Brush.Accent}">
                        <TextBlock VerticalAlignment="Center"  Margin="3" 
                                   Foreground="{DynamicResource S.Brush.TextForeground.White}"
                                   HorizontalAlignment="Right" 
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label，以及ClearText按钮的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.LabelClear" BasedOn="{StaticResource S.BindPasswordBox.Label}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" 
                                   FIconMargin="0"
                                   base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                   Margin="0,3,1,4" 
                                   FIconSize="14" 
                                   Foreground="{TemplateBinding Foreground}"
                                   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Sinple.Label" BasedOn="{StaticResource S.BindPasswordBox.Single}">
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="70" Margin="3">
                        <TextBlock VerticalAlignment="Center" 
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Right"
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label，以及ClearText按钮的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Sinple.LabelClear" BasedOn="{StaticResource S.BindPasswordBox.Sinple.Label}">
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" 
                                   FIconMargin="0"
                                   base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                   Margin="0,3,1,4" 
                                   FIconSize="14" 
                                   Foreground="{TemplateBinding Foreground}"
                                   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox包含附加属性Label，以及ClearText按钮的样式-->
    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Show" BasedOn="{StaticResource S.BindPasswordBox.Default}">
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="60" Background="{DynamicResource S.Brush.Accent}">
                        <TextBlock VerticalAlignment="Center" 
                                   Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                   HorizontalAlignment="Right" 
                                   Margin="3" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="base:ControlAttachProperty.AttachContent">
            <Setter.Value>
                <ControlTemplate>
                    <local:FButton FIcon="&#xe6f4;" 
                                   Style="{DynamicResource S.FButton.Style.Transparent}" 
                                   IsTabStop="False" 
                                   FIconMargin="0"
                                   base:ControlAttachProperty.IsClearTextButtonBehaviorEnabled="True" 
                                   Command="base:ControlAttachProperty.ClearTextCommand" 
                                   CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                   Margin="0,3,1,4" 
                                   FIconSize="14" 
                                  Foreground="{TemplateBinding Foreground}"
                                   Cursor="Arrow"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Circle" BasedOn="{StaticResource S.BindPasswordBox.Default}">
        <Setter Property="Padding" Value="15,0,5,0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="5"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="17"/>
    </Style>

    <Style TargetType="{x:Type local:BindPassWordBox}" x:Key="S.BindPasswordBox.Circle.Label" BasedOn="{StaticResource S.BindPasswordBox.Label}">
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="17"/>
        <Setter Property="base:ControlAttachProperty.FIconMargin" Value="5"/>
        <Setter Property="base:ControlAttachProperty.LabelTemplate" >
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border MinWidth="90" Background="Transparent">
                        <TextBlock  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

