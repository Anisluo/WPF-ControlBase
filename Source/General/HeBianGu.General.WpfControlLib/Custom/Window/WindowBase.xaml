<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:base="clr-namespace:HeBianGu.Base.WpfBase;assembly=HeBianGu.Base.WpfBase"
                    xmlns:local="clr-namespace:HeBianGu.General.WpfControlLib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Control/FButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--消息弹窗加载 由下到上 +震动-->
    <Storyboard x:Key="Story.MessageLoad">
        <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>
        <DoubleAnimation From="1" To="0" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[1].Offset"/>
        <DoubleAnimation From="1" To="0" Duration="0" BeginTime="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Offset"/>
        <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>

        <DoubleAnimation From="-100" To="0" Duration="0:0:0.5" BeginTime="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
            <DoubleAnimation.EasingFunction>
                <ElasticEase EasingMode="EaseOut" Oscillations="3" Springiness="10"></ElasticEase>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="Story.WindowLoad">
        <DoubleAnimation From="1" To="0" Duration="0:0:1.5" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[1].Offset"/>
        <DoubleAnimation From="1" To="0" Duration="0:0:1" BeginTime="0:0:0.5" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Offset"/>
        <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>
    </Storyboard>
    <!--WindowBase基本样式，可以自定义头部-->
    <Style x:Key="BaseWindowStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.Dark.2}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="26"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.WindowBackground}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.White.Notice}" />
        <Setter Property="FIcon" Value="&#xe62e;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="3"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="0"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Margin="2">
                        <!--背景，边框-->
                        <Border x:Name="Bg" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" Effect="{StaticResource S.DropShadowEffect.Window}"
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>
                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{DynamicResource S.Brush.Accent}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <!--内容区域-->
                        <AdornerDecorator>
                            <ContentPresenter Margin="1" Content="{TemplateBinding Content}" />
                        </AdornerDecorator>

                        <!--窗体功能按钮：最小、最大、关闭-->
                        <Border VerticalAlignment="Top" Height="{TemplateBinding CaptionHeight}" Width="Auto" Margin="1" HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="30">
                                <local:FButton x:Name="btnMin"  Width="26" VerticalAlignment="Center" Margin="1,2,1,2" 
                                               Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                               Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe60d;" FIconSize="16"
                                               WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                <local:FButton x:Name="btnMax"  Width="26" VerticalAlignment="Center" Margin="1,2,1,2" 
                                                Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                                Style="{DynamicResource S.FButton.Style.Transparent}" FIcon="&#xe615;" FIconSize="16"
                                                WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                <local:FButton x:Name="btnClose"  Width="38" VerticalAlignment="Center"  Margin="1,2,3,2" CornerRadius="0"
                                               MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe610;" FIconSize="16"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{TemplateBinding CaptionForeground}"
                                              Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                        </Border>

                        <!--淡出效果-->
                        <Grid.OpacityMask>
                            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                <GradientStop Color="#00000000" Offset="0"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                                <GradientStop Color="#00000000" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.OpacityMask>
                        <!--淡出效果-->
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="1" To="0" Duration="0:0:1.5" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[1].Offset"/>
                                            <DoubleAnimation From="1" To="0" Duration="0:0:1" BeginTime="0:0:0.5" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Offset"/>
                                            <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe62b;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--非透明的主窗体样式，主要目的是支持Winform控件的显示，用于主窗体-->
    <Style x:Key="NoTransparencyWindowStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.Dark.2}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="26"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowState" Value="Maximized"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent.Opacity.5}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.White.Notice}" />
        <Setter Property="FIcon" Value="&#xe62e;"/>
        <Setter Property="MaxboxEnable" Value="False"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid>
                        <!--背景，边框-->
                        <Border x:Name="Bg" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{DynamicResource S.Brush.Accent}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <!--内容区域-->
                        <AdornerDecorator>
                            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                        </AdornerDecorator>
                        <!--窗体功能按钮：最小、最大、关闭-->
                        <Border VerticalAlignment="Top" Height="{TemplateBinding CaptionHeight}" Width="Auto" Margin="1" HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="30">
                                <local:FButton x:Name="btnMin"  Width="26" VerticalAlignment="Center" Margin="1,2,1,2" Foreground="{TemplateBinding CaptionForeground}"
                                               Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                               Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe60d;" FIconSize="16" 
                                               Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                <local:FButton x:Name="btnMax"  Width="26" VerticalAlignment="Center" Margin="1,2,1,2" Foreground="{TemplateBinding CaptionForeground}"
                                                Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                                Style="{DynamicResource S.FButton.Style.Transparent}" FIcon="&#xe62b;" FIconSize="16" 
                                               Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                <local:FButton x:Name="btnClose"  Width="38" VerticalAlignment="Center" Height="24" Margin="1,2,3,2" CornerRadius="0" Foreground="{TemplateBinding CaptionForeground}"
                                               MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe60a;" FIconSize="16" 
                                               Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe62b;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe65b;"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认WindowBase的样式-->
    <Style x:Key="S.Window.Main.Default" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="26"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="FIcon" Value="&#xe79c;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <!--<Setter Property="Padding" Value="10"/>-->
        <Setter Property="WindowStyle" Value="None"/>
        <!--默认背景模糊效果-->
        <Setter Property="DefaultBlurEffect">
            <Setter.Value>
                <BlurEffect/>
            </Setter.Value>
        </Setter>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="0"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Name="g_all">
                        <!--背景-->
                        <Border x:Name="Bg" 
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Effect="{StaticResource S.EffectShadow.3}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>

                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                 Background="{TemplateBinding Background}" 
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>

                        <Grid Margin="1">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="20" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--Caption标题部分-->
                            <Border  Grid.Row="0" Background="{TemplateBinding CaptionBackground}">
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                    <!--Header部分-->
                                    <StackPanel x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" Margin="15,1,15,1" Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBlock Style="{DynamicResource FIcon}" Foreground="{TemplateBinding CaptionForeground}" FontSize="{TemplateBinding FIconSize}" FontWeight="Bold" Text="{TemplateBinding FIcon}"/>
                                        <TextBlock VerticalAlignment="Center" Margin="5" FontSize="{StaticResource S.FontSize.Header}" Foreground="{TemplateBinding CaptionForeground}" Text="{TemplateBinding Title}"/>
                                    </StackPanel>
                                    <!--窗体功能按钮：最小、最大、关闭-->
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">

                                        <ToggleButton x:Name="btnTheme" Width="30" VerticalAlignment="Center" Margin="1" 
                                               Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                              Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" base:ControlAttachProperty.FIcon="&#xe6d2;"
                                               WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>

                                        <local:FButton x:Name="btnMin"  Width="30" VerticalAlignment="Center" Margin="1" 
                                               Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                               Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe61d;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnMax"  Width="30" VerticalAlignment="Center" Margin="1" 
                                                Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                                Style="{DynamicResource S.FButton.Style.Transparent}" FIcon="&#xe665;" FIconSize="14"
                                                WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnClose"  Width="35" Height="35" VerticalAlignment="Center" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                                               MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            
                            <!--窗体内容区域-->
                            <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                <Grid>
                                    <!--托盘图标-->
                                    <local:NotifyIcon x:Name="PART_NotifyIcon" 
                                                          Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}" 
                                                          Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                                          Text="{TemplateBinding Title}"
                                                          IconVisibility="Visible">

                                        <FrameworkElement.ContextMenu>
                                            <ContextMenu Style="{DynamicResource DefaultContextMenu}">
                                                <MenuItem Header="显示面板" />
                                                <MenuItem Header="退出" />
                                            </ContextMenu>
                                        </FrameworkElement.ContextMenu>
                                    </local:NotifyIcon>

                                    <!--整体消息弹出-->
                                    <local:DialogHost Identifier="windowDialog" Margin="-3,0,-3,-3">
                                        <Grid Effect="{TemplateBinding AdornerDecoratorEffect}">
                                            <!--最底层内容-->
                                            <ContentPresenter Content="{TemplateBinding Content}" />

                                            <!--第一次蒙版-->
                                            <local:ModernFrame Visibility="Collapsed" x:Name="PART_SettingFrame">
                                                <local:ModernFrame.Background>
                                                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                                                </local:ModernFrame.Background>
                                            </local:ModernFrame>

                                            <local:SwtichTransitioner  x:Name="PART_SwtichTransitioner"  Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                <local:SwtichTransitioner.Background>
                                                    <SolidColorBrush Color="#000000" Opacity="0.5"/>
                                                </local:SwtichTransitioner.Background>
                                                <local:SwtichTransitioner.ITransitionWipe>
                                                    <!--<local:SlideWipe Direction="Up"/>-->
                                                    <local:SlideOutScale/>
                                                </local:SwtichTransitioner.ITransitionWipe>
                                            </local:SwtichTransitioner>

                                            <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1" Source="{Binding MessageSource,Mode=TwoWay}"/>
                                        </Grid>
                                    </local:DialogHost> 
                                    
                                    <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                </Grid> 
                            </AdornerDecorator>
                            <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"  PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top" AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}" CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}" BorderThickness="1">
                                    <StackPanel Margin="10">
                                        <local:ThemeSetControl/>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        <!--淡出动画-->
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认WindowBase的样式-->
    <Style x:Key="MessageWindowStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.WindowBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{StaticResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{StaticResource  S.FontFamily.Default}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="26"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.WindowBackground}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource  S.Brush.White.Notice}" />
        <Setter Property="FIcon" Value="&#xe605;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="3"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="0"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Name="g_all" Margin="6">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <!--背景-->
                        <Border x:Name="Bg" 
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Effect="{StaticResource S.DropShadowEffect.Window}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <Grid Margin="1">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="18" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Caption标题部分-->
                            <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}">
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--Header部分-->
                                    <StackPanel  x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" Margin="5,1,5,1" Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBlock   Style="{DynamicResource FIcon}" Foreground="{TemplateBinding CaptionForeground}" FontSize="{TemplateBinding FIconSize}" FontWeight="Bold" Text="{TemplateBinding FIcon}"/>
                                        <TextBlock   VerticalAlignment="Center" Margin="5" FontSize="{DynamicResource S.FontSize.Header}" Foreground="{TemplateBinding CaptionForeground}" Text="{TemplateBinding Title}"/>
                                    </StackPanel>
                                    <!--窗体功能按钮：最小、最大、关闭-->
                                    <StackPanel   Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                        <local:FButton   x:Name="btnClose"  Width="35" VerticalAlignment="Center" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                                               MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--窗体内容区域-->
                            <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--淡出动画-->
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource Story.MessageLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认WindowBase的样式-->
    <Style x:Key="S.Window.Link.Default" TargetType="{x:Type local:LinkWindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="CaptionHeight" Value="76"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="FIcon" Value="&#xe79c;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <Setter Property="NotifyIconSource" Value="/HeBianGu.General.WpfControlLib;component/Resources/iBook.ico"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="10"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="0"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LinkWindowBase}">
                    <Viewbox>
                        <Grid Name="g_all" Width="1920" Height="1040"  Margin="10">
                            <!--Margin="2,0,2,2"-->
                            <!--背景-->
                            <Border x:Name="Bg" 
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Effect="{DynamicResource S.DropShadowEffect.Window}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                            <Border x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                  Background="{TemplateBinding Background}" 
                                  BorderThickness="{TemplateBinding BorderThickness}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="20" Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--Caption标题部分-->
                                <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}">
                                    <Grid Margin="2,1,2,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="250"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                                        <!--Header部分-->
                                        <StackPanel x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" HorizontalAlignment="Left" Margin="15,1,15,1" Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Margin="5,20" Source="{TemplateBinding Logo}" />
                                        </StackPanel>

                                        <!--菜单页部分-->

                                        <ScrollViewer Grid.Column="1" Style="{DynamicResource S.ScrollView.Center.Default}" FontSize="20"  WindowChrome.IsHitTestVisibleInChrome="True"
                                                      base:ControlAttachProperty.MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}" HorizontalAlignment="Left"
                                                      base:ControlAttachProperty.PressForeground="{DynamicResource S.Brush.TextForeground.White}"
                                                      Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}" Padding="20,0">
                                            <ListBox x:Name="list"  Grid.Column="1" Background="Transparent" 
                                              BorderBrush="Transparent" SelectedIndex="0"
                                              SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"
                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TabLinks}" Margin="-2"
                                              WindowChrome.IsHitTestVisibleInChrome="True" >

                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <Grid Width="218">
                                                                        <Border x:Name="border" Background="Transparent">
                                                                            <Grid>
                                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <TextBlock Style="{DynamicResource FIcon}" 
                                                                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}"
                                                                                       FontSize="30" 
                                                                                       Text="{Binding Logo}" 
                                                                                       HorizontalAlignment="Center" 
                                                                                       VerticalAlignment="Center"/>

                                                                                    <TextBlock Text="{Binding DisplayName}" 
                                                                                       Margin="8,0,0,0" FontSize="18" VerticalAlignment="Center"
                                                                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}"/>
                                                                                </StackPanel>

                                                                                <Border x:Name="bord_selected"  Visibility="Collapsed" VerticalAlignment="Top" Background="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}" Height="5"/>

                                                                            </Grid>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsSelected" Value="true">
                                                                            <Setter Property="Background" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.4}" TargetName="border"/>
                                                                            <Setter Property="Visibility" Value="Visible" TargetName="bord_selected"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter Property="Background" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.2}" TargetName="border"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>
                                        </ScrollViewer>

                                        <ItemsControl Grid.Column="2" Margin="57,0" Background="Purple"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                                  ItemsSource="{TemplateBinding SettingLinks}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel>
                                                    </StackPanel>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <ItemContainerTemplate>
                                                    <local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" 
                                                               HorizontalAlignment="Center" FIcon="{Binding Logo}"
                                                               VerticalAlignment="Center" FIconMargin="0,2,5,0"
                                                               Width="100" FontSize="18" Foreground="{DynamicResource S.Brush.White.Notice}"
                                                               Command="{Binding Path=SettimgWindowCommand,RelativeSource={ RelativeSource AncestorType=local:WindowBase}}"
                                                               CommandParameter="{Binding Source}"
                                                               Content="{Binding DisplayName}"/>

                                                </ItemContainerTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                        <!--窗体功能按钮：最小、最大、关闭-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Margin="10,0"  HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type local:FButton}" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                                    <Setter  Property="Margin" Value="10,0"/>
                                                    <Setter  Property="Width" Value="{DynamicResource S.Window.ItemHeight}"/>
                                                    <Setter  Property="MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                    <Setter  Property="PressedForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                    <Setter  Property="FIconSize" Value="15"/>
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CaptionForeground}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="0.6"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Resources>

                                            <ToggleButton x:Name="btnTheme"  Width="{DynamicResource S.Window.ItemHeight}"  VerticalAlignment="Center" Margin="5,0"   ToolTip="更换主题颜色"
                                               Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                              Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" base:ControlAttachProperty.FIcon="&#xe6d2;"  base:ControlAttachProperty.FIconSize="25"
                                               WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>


                                            <local:FButton x:Name="btnNotify"   FIcon="&#xe659;" ToolTip="隐藏到托盘"  Command="{Binding Path=NotifyWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnMin"  Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                              FIcon="&#xe61d;"   Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnMax" 
                                                Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                               Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnClose" Width="{DynamicResource S.Window.Item.Height}" Margin="10,0" FIconSize="15" Foreground="{DynamicResource S.Brush.TextForeground.White}" 
                                               MouseOverBackground="Red" MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                                               AllowsAnimation="True"  FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}"
                                               Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </StackPanel>


                                    </Grid>
                                </Border>
                                <!--窗体内容区域-->
                                <AdornerDecorator Grid.Row="1" Margin="1,0,1,1" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        <!--托盘图标-->
                                        <local:NotifyIcon x:Name="PART_NotifyIcon" 
                                                          Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}" 
                                                          Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                                          Text="{TemplateBinding Title}"
                                                          IconVisibility="Visible">

                                            <FrameworkElement.ContextMenu>
                                                <ContextMenu Style="{DynamicResource DefaultContextMenu}">
                                                    <MenuItem Header="显示面板" />
                                                    <MenuItem Header="退出" />
                                                </ContextMenu>
                                            </FrameworkElement.ContextMenu>
                                        </local:NotifyIcon>

                                        <local:DrawerHost HorizontalContentAlignment="Stretch">
                                            <local:DrawerHost.LeftDrawerContent>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="35"/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>

                                                    <Border Background="{DynamicResource S.Brush.Dark.Notice}" BorderThickness="0,0,0,0"/>

                                                    <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink.Logo}"
                                                               HorizontalAlignment="Left" Margin="8,0" FIconSize="12"
                                                               Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Left}" 
                                                               Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink.DisplayName}"
                                                               Style="{DynamicResource S.FButton.Style.Transparent}"/>

                                                    <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"
                                                                           LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink}"/>

 
                                                    <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"   
                                                               FIcon="&#xe9cd;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Left}" 
                                                               FIconSize="14" Margin="5,0"
                                                               HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                                                </Grid>
                                            </local:DrawerHost.LeftDrawerContent>
                                            <local:DrawerHost.TopDrawerContent>
                                                <Grid>
                                                    <Border Background="{DynamicResource S.Brush.Gray.Notice}" BorderThickness="0,0,0,0"/>

                                                    <!--<ContentPresenter Grid.Row="1"  Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.ActionResult.View}"/>-->

                                                    <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink}"/>

                                                    <!--<local:ModernFrame Grid.Row="1" Margin="0,0" BorderBrush="Transparent" BorderThickness="0"
                                                                   Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.Source}"/>-->

                                                    <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"   
                                                               FIcon="&#xe9d3;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Top}" 
                                                               FIconSize="14" Margin="5,5"
                                                               HorizontalAlignment="Right"  VerticalAlignment="Bottom"/>

                                                    <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.Logo}"
                                                               HorizontalAlignment="Right" Margin="30,0" FIconSize="12"
                                                                Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Top}" 
                                                               Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.DisplayName}"
                                                    Style="{DynamicResource S.FButton.Style.Transparent}"/>
                                                </Grid>
                                            </local:DrawerHost.TopDrawerContent>
                                            <local:DrawerHost.BottomDrawerContent>
                                                <Grid>
                                                    <Border Background="{DynamicResource S.Brush.Dark.2}" BorderThickness="0,0,0,0"/>

                                                    <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"  LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink}"/>

                                                    <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"   
                                                               FIcon="&#xe9cc;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Bottom}" 
                                                               FIconSize="14" Margin="5,5"
                                                               HorizontalAlignment="Right"  VerticalAlignment="Top"/>

                                                    <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink.Logo}"
                                                               HorizontalAlignment="Right" Margin="8,3" FIconSize="12" VerticalAlignment="Bottom"
                                                                Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Bottom}" 
                                                               Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink.DisplayName}"
                                                    Style="{DynamicResource S.FButton.Style.Transparent}"/>
                                                </Grid>
                                            </local:DrawerHost.BottomDrawerContent>
                                            <local:DrawerHost.RightDrawerContent>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="35"/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>

                                                    <Border Background="{DynamicResource S.Brush.Gray.Notice}" BorderThickness="0,0,0,0"/>

                                                    <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink.Logo}"
                                                               HorizontalAlignment="Right" Margin="8,0" FIconSize="12"
                                                                Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Right}" 
                                                               Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink.DisplayName}"
                                                    Style="{DynamicResource S.FButton.Style.Transparent}"/>

                                                    <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"  LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink}"/>

                                                    <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"   
                                                               FIcon="&#xe9ce;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}" 
                                                               CommandParameter="{x:Static Dock.Right}" 
                                                               FIconSize="14" Margin="5,0"
                                                               HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                                                </Grid>
                                            </local:DrawerHost.RightDrawerContent>

                                            <Grid>
                                                <!--整体消息弹出-->
                                                <local:DialogHost Identifier="windowDialog" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-3,0,-3,-3">
                                                    <Grid>
                                                        <local:LinkActionFrame UseRandomWipe="False" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"/>

                                                        <!--第一次蒙版-->
                                                        <local:ModernFrame  Visibility="Collapsed"  x:Name="PART_SettingFrame">
                                                            <local:ModernFrame.Background>
                                                                <SolidColorBrush Color="#000000" Opacity="0.5"/>
                                                            </local:ModernFrame.Background>
                                                        </local:ModernFrame>

                                                        <local:LinkActionFrame x:Name="PART_LinkActionFrame"  Visibility="Collapsed"  UseRandomWipe="True"/>


                                                        <local:SwtichTransitioner  x:Name="PART_SwtichTransitioner"  Visibility="Collapsed"
                                                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                            <local:SwtichTransitioner.Background>
                                                                <SolidColorBrush Color="#000000" Opacity="0.5"/>
                                                            </local:SwtichTransitioner.Background>
                                                            <local:SwtichTransitioner.ITransitionWipe>
                                                                <!--<local:SlideWipe Direction="Up"/>-->
                                                                <local:SlideOutScale/>
                                                            </local:SwtichTransitioner.ITransitionWipe>
                                                        </local:SwtichTransitioner>

                                                    </Grid>
                                                </local:DialogHost>

                                                <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1" Source="{Binding MessageSource,Mode=TwoWay}"/>

                                                <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                            </Grid>
                                        </local:DrawerHost>
                                    </Grid>
                                </AdornerDecorator>

                                <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"  
                                       PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top" 
                                       AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">

                                    <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}" 
                                            CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}"
                                            BorderThickness="1">
                                        <StackPanel Margin="10">
                                            <local:ThemeSetControl Foreground="{TemplateBinding CaptionForeground}"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        <!--淡出动画-->
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Window.Login.Default" TargetType="{x:Type local:LoginWindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}"/>
        <Setter Property="Width" Value="385"/>
        <Setter Property="Height" Value="331"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="120"/>
        <Setter Property="MaxboxEnable" Value="False"/>
        <Setter Property="MinboxEnable" Value="False"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="FIcon" Value=""/>
        <Setter Property="MaxboxEnable" Value="False"/>
        <Setter Property="MinboxEnable" Value="False"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="10"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Topmost" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <!--<Setter Property="Visibility" Value="{Binding IsLoginning,Converter={x:Static local:XConverter.BooleanToVisibilityConverter},Mode=TwoWay}"/>-->
        <Setter Property="IsLogined" Value="{Binding IsLogined}"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="6"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  
                    CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                   ResizeBorderThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LoginWindowBase}">
                    <Grid Name="g_all">
                        <!--背景-->
                        <Border x:Name="Bg"
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"   Effect="{StaticResource S.EffectShadow.3}" 
                                BorderThickness="{TemplateBinding BorderThickness}"  Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                  Background="{TemplateBinding Background}" 
                                  BorderThickness="{TemplateBinding BorderThickness}"  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                            <Grid Margin="-0.5">
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="20" Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--Caption标题部分-->
                                <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}" CornerRadius="8,8,0,0">
                                    <Grid Margin="2,1,2,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.ColumnSpan="3" Grid.RowSpan="2"/>

                                        <!--Header部分-->
                                        <Grid Grid.ColumnSpan="3" x:Name="PART_Header" HorizontalAlignment="Stretch"  
                                          Height="{TemplateBinding CaptionHeight}" Margin="15,1,15,1" VerticalAlignment="Stretch">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <TextBlock Style="{DynamicResource FIcon}"   Foreground="{TemplateBinding CaptionForeground}" 
                                                   FontSize="{TemplateBinding FIconSize}" 
                                                   FontWeight="Bold" Text="{TemplateBinding FIcon}"/>

                                                <TextBlock VerticalAlignment="Center" 
                                                   Margin="5" 
                                                   FontSize="{DynamicResource S.FontSize.Header}"
                                                   Foreground="{TemplateBinding CaptionForeground}" 
                                                   Text="{TemplateBinding Title}"/>
                                            </StackPanel>

                                            <Image HorizontalAlignment="Center" 
                                               VerticalAlignment="Center" Margin="0,40"
                                               Source="{TemplateBinding Logo}"/>
                                        </Grid>

                                        <!--窗体功能按钮：最小、最大、关闭-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal"  VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">

                                            <local:FButton x:Name="btnMin"  Width="30" VerticalAlignment="Center" Margin="1" 
                                               Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                               Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe61d;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnMax"  Width="30" VerticalAlignment="Center" Margin="1" 
                                                Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static base:XConverter.BooleanToVisibilityConverter}}"
                                                Style="{DynamicResource S.FButton.Style.Transparent}" FIcon="&#xe665;" FIconSize="14"
                                                WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnClose"  Width="30" Height="30" VerticalAlignment="Top" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                                               MouseOverBackground="Transparent" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{TemplateBinding CaptionForeground}"
                                               Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <!--窗体内容区域-->
                                <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                    <Grid>
                                        <Grid Margin="0,10">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition Height="0.5*"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <!--用户名-->
                                            <local:FTextBox Grid.Row="0" Width="220" Height="38" 
                                                                FontSize="14" base:ControlAttachProperty.FIcon="{Binding Source={StaticResource S.XmlDataProvider.Language},XPath=Account}" 
                                                                base:ControlAttachProperty.Watermark="{Binding Source={StaticResource S.XmlDataProvider.Language},XPath=Account}" 
                                                                CaretBrush="{DynamicResource S.Brush.TextForeground.Title}"
                                                                base:ControlAttachProperty.FIconSize="14"
                                                                base:ControlAttachProperty.FIconMargin="5" Text="{Binding LoginUseName}"
                                                                Style="{DynamicResource S.FTextBox.Clear}"/>


                                            <local:BindPassWordBox x:Name="bpw_bindpassword"  
                                                                       Grid.Row="1" Width="220" Height="38"
                                                                       base:ControlAttachProperty.Watermark="{Binding Source={StaticResource S.XmlDataProvider.Language},XPath=Account}" 
                                                                       Style="{DynamicResource S.BindPasswordBox.Default}"
                                                                       FontSize="14" base:ControlAttachProperty.FIcon="{Binding Source={StaticResource S.XmlDataProvider.Language},XPath=Password}" 
                                                                CaretBrush="{DynamicResource S.Brush.TextForeground.Title}" 
                                                                base:ControlAttachProperty.FIconSize="14" 
                                                                base:ControlAttachProperty.FIconMargin="5" 
                                                                PassWord="{Binding LoginPassWord,Mode=TwoWay}"  />

                                            <!--记住密码-->
                                            <local:FCheckBox Grid.Row="2" base:ControlAttachProperty.FIconMargin="0,0,4,0"
                                                                 Content="{Binding Source={StaticResource S.XmlDataProvider.Language},XPath=RememberPassword}" Margin="69,0" FontSize="12"
                                                                 base:ControlAttachProperty.FIconSize="12" IsChecked="{Binding Remenber}"
                                                                 Style="{DynamicResource DefaultCheckBox}"/>

                                            <!--登录-->
                                            <local:FButton Grid.Row="3" Command="{Binding RelayCommand}" CommandParameter="Sumit"
                                                               CornerRadius="22" Height="38"
                                                               base:ControlAttachProperty.IsBuzy="{Binding IsBuzy}"
                                                               base:ControlAttachProperty.BuzyText="登录中..." 
                                                               IsEnabled="{Binding IsEnbled}" 
                                                               ToolTip="{Binding LoginMessage}"
                                                               Content="{Binding LoginMessage}" Width="220">
                                            </local:FButton>
                                        </Grid>
                                    </Grid>
                                </AdornerDecorator>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        <!--淡出动画-->
                        <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Window.Dialog.Default" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackgound.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}"/>
        <Setter Property="Width" Value="520"/>
        <Setter Property="Height" Value="360"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="20"/>
        <Setter Property="CaptionHeight" Value="26"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.WindowBackground}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="FIcon" Value="&#xe65c;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="10"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="5"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Name="g_all" Margin="-1">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <!--背景-->
                        <Border x:Name="Bg" 
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Effect="{StaticResource S.EffectShadow.3}" Margin="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="18" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Caption标题部分-->
                            <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}"  CornerRadius="5,5,0,0" >
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--Header部分-->
                                    <StackPanel  x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" Margin="5,1,5,1" Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBlock   Style="{DynamicResource FIcon}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}" FontSize="{TemplateBinding FIconSize}" FontWeight="Bold" Text="{TemplateBinding FIcon}"/>
                                        <TextBlock   VerticalAlignment="Center" Margin="5" FontSize="{DynamicResource S.FontSize.Header}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}" Text="{TemplateBinding Title}"/>
                                    </StackPanel>
                                    <!--窗体功能按钮：最小、最大、关闭-->
                                    <StackPanel   Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                        <local:FButton   x:Name="btnClose"  Width="35" VerticalAlignment="Center" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                                               MouseOverBackground="Transparent" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}"
                                               Command="{x:Static local:CommandService.Close}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--窗体内容区域-->
                            <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        -->
                    <!--淡出动画-->
                    <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource Story.MessageLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Window.Notify.Default" TargetType="{x:Type local:NotifyWindow}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.TextBackground.Default}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Title}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="FontFamily" Value="{DynamicResource  S.FontFamily.Default}"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="220"/>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FIconSize" Value="15"/>
        <Setter Property="CaptionHeight" Value="25"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="Topmost" Value="True"/>
        <!--标题栏背景色-->
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.WindowBackground}" />
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="FIcon" Value="&#xe65c;"/>
        <Setter Property="MaxboxEnable" Value="True"/>
        <Setter Property="MinboxEnable" Value="True"/>
        <!--建议内边框=3：ResizeBorderThickness = new Thickness(3);-->
        <Setter Property="Padding" Value="3"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="base:ControlAttachProperty.CornerRadius" Value="3"/>
        <!--窗体基本设置 WindowChrome-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WindowBase}">
                    <Grid Name="g_all" Margin="6">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <!--背景-->
                        <Border x:Name="Bg" 
                                CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Effect="{StaticResource S.DropShadowEffect.Window}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding base:ControlAttachProperty.CornerRadius}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />
                        <Grid Margin="1">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="18" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Caption标题部分-->
                            <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}"  CornerRadius="3,3,0,0" >
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--Header部分-->
                                    <StackPanel  x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" Margin="5,1,5,1" Orientation="Horizontal" VerticalAlignment="Center">
                                        <TextBlock   Style="{DynamicResource FIcon}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}" FontSize="{TemplateBinding FIconSize}" FontWeight="Bold" Text="{TemplateBinding FIcon}"/>
                                        <TextBlock   VerticalAlignment="Center" Margin="5" FontSize="{DynamicResource S.FontSize.Header}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}" Text="{TemplateBinding Title}"/>
                                    </StackPanel>
                                    <!--窗体功能按钮：最小、最大、关闭-->
                                    <StackPanel   Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                        <local:FButton   x:Name="btnClose"  Width="35" VerticalAlignment="Center" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                                               MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                                               AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                                               WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground}"
                                               Command="{x:Static local:CommandService.Close}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--窗体内容区域-->
                            <AdornerDecorator Grid.Row="1" Margin="3,0,3,3">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                        </Grid>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        -->
                    <!--淡出动画-->
                    <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource Story.MessageLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--设置窗体默认样式-->
    <Style TargetType="{x:Type local:WindowBase}" BasedOn="{StaticResource DefaultWindowStyle}"></Style>

</ResourceDictionary>
